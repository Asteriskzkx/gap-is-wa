import { BaseModel } from "./BaseModel";

export class AuditorInspectionModel extends BaseModel {
  auditorInspectionId: number;
  auditorId: number;
  inspectionId: number;

  constructor(
    auditorInspectionId: number,
    auditorId: number,
    inspectionId: number,
    createdAt: Date = new Date(),
    updatedAt: Date = new Date()
  ) {
    super(auditorInspectionId, createdAt, updatedAt);
    this.auditorInspectionId = auditorInspectionId;
    this.auditorId = auditorId;
    this.inspectionId = inspectionId;
  }

  static create(
    auditorId: number,
    inspectionId: number
  ): AuditorInspectionModel {
    return new AuditorInspectionModel(
      0, // auditorInspectionId will be generated by the database
      auditorId,
      inspectionId
    );
  }

  validate(): boolean {
    return this.auditorId > 0 && this.inspectionId > 0;
  }

  toJSON(): Record<string, any> {
    return {
      auditorInspectionId: this.auditorInspectionId,
      auditorId: this.auditorId,
      inspectionId: this.inspectionId,
      createdAt: this.createdAt,
      updatedAt: this.updatedAt,
    };
  }
}
