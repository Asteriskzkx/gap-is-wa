import { BaseModel } from "./BaseModel";

export class AdviceAndDefectModel extends BaseModel {
  adviceAndDefectId: number;
  inspectionId: number;
  date: Date;
  adviceList: any; // JSON data
  defectList: any; // JSON data

  constructor(
    adviceAndDefectId: number,
    inspectionId: number,
    date: Date,
    adviceList: any,
    defectList: any,
    createdAt: Date = new Date(),
    updatedAt: Date = new Date()
  ) {
    super(adviceAndDefectId, createdAt, updatedAt);
    this.adviceAndDefectId = adviceAndDefectId;
    this.inspectionId = inspectionId;
    this.date = date;
    this.adviceList = adviceList;
    this.defectList = defectList;
  }

  static create(
    inspectionId: number,
    date: Date,
    adviceList: any,
    defectList: any
  ): AdviceAndDefectModel {
    return new AdviceAndDefectModel(
      0, // adviceAndDefectId will be generated by the database
      inspectionId,
      date,
      adviceList,
      defectList
    );
  }

  validate(): boolean {
    return (
      this.inspectionId > 0 &&
      this.date instanceof Date &&
      this.adviceList !== null &&
      this.defectList !== null
    );
  }

  toJSON(): Record<string, any> {
    return {
      adviceAndDefectId: this.adviceAndDefectId,
      inspectionId: this.inspectionId,
      date: this.date,
      adviceList: this.adviceList,
      defectList: this.defectList,
      createdAt: this.createdAt,
      updatedAt: this.updatedAt,
    };
  }
}
