import { BaseModel } from "./BaseModel";
import { RequirementModel } from "./RequirementModel";
export class InspectionItemModel extends BaseModel {
  inspectionItemId: number;
  inspectionId: number;
  inspectionItemMasterId: number;
  inspectionItemNo: number;
  inspectionItemResult: string;
  otherConditions: any; // JSON data

  // Relations
  requirements?: RequirementModel[];

  constructor(
    inspectionItemId: number,
    inspectionId: number,
    inspectionItemMasterId: number,
    inspectionItemNo: number,
    inspectionItemResult: string,
    otherConditions: any,
    createdAt: Date = new Date(),
    updatedAt: Date = new Date()
  ) {
    super(inspectionItemId, createdAt, updatedAt);
    this.inspectionItemId = inspectionItemId;
    this.inspectionId = inspectionId;
    this.inspectionItemMasterId = inspectionItemMasterId;
    this.inspectionItemNo = inspectionItemNo;
    this.inspectionItemResult = inspectionItemResult;
    this.otherConditions = otherConditions;
  }

  static create(
    inspectionId: number,
    inspectionItemMasterId: number,
    inspectionItemNo: number,
    inspectionItemResult: string,
    otherConditions: any
  ): InspectionItemModel {
    return new InspectionItemModel(
      0, // inspectionItemId will be generated by the database
      inspectionId,
      inspectionItemMasterId,
      inspectionItemNo,
      inspectionItemResult,
      otherConditions
    );
  }

  validate(): boolean {
    return (
      this.inspectionId > 0 &&
      this.inspectionItemMasterId > 0 &&
      this.inspectionItemNo > 0 &&
      this.inspectionItemResult.trim().length > 0 &&
      this.otherConditions !== null
    );
  }

  toJSON(): Record<string, any> {
    return {
      inspectionItemId: this.inspectionItemId,
      inspectionId: this.inspectionId,
      inspectionItemMasterId: this.inspectionItemMasterId,
      inspectionItemNo: this.inspectionItemNo,
      inspectionItemResult: this.inspectionItemResult,
      otherConditions: this.otherConditions,
      createdAt: this.createdAt,
      updatedAt: this.updatedAt,
      requirements: this.requirements?.map((req) => req.toJSON()) || [],
    };
  }
}
